name: Build and Push Docker Image to ACR

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

jobs:
  build-and-push-to-acr:
    runs-on: ubuntu-latest # Use a GitHub-hosted runner
    permissions:
      id-token: write # This is CRUCIAL for OIDC authentication with Azure
      contents: read  # Required for the actions/checkout@v4 step

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Action to check out your repository code

    - name: Azure Login (using OIDC)
      uses: azure/login@v1 # Action to log in to Azure using the Service Principal
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }} # Uses the GitHub secret for client ID
        tenant-id: ${{ secrets.AZURE_TENANT_ID }} # Uses the GitHub secret for tenant ID
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} # Uses the GitHub secret for subscription ID

    - name: Docker Login to Azure Container Registry
      uses: azure/docker-login@v2 # Action to log Docker into your ACR
      with:
        login-server: sarav-acr-github-sp.azurecr.io # Your ACR's login server

    - name: Build Docker Image
      run: |
        # Replace <YOUR_IMAGE_NAME> with your actual desired image name, e.g., 'cortex-app'
        DOCKER_IMAGE=sarav-acr-github-sp.azurecr.io/cortex-app:${{ github.sha }}
        docker build . -t $DOCKER_IMAGE

    - name: Push Docker Image to ACR
      run: |
        DOCKER_IMAGE=sarav-acr-github-sp.azurecr.io/cortex-app:${{ github.sha }}
        docker push $DOCKER_IMAGE

    # You can add more steps here, e.g., deploying the container image to Azure Container Apps or AKS
